#!/bin/bash

# colors

function blue ()
{
    printf "\033[0;34m$1\033[0m"
}

function lightblue ()
{
    printf "\033[1;34m$1\033[0m"
}

function brown ()
{
    printf "\033[0;33m$1\033[0m"
}

function green ()
{
    printf "\033[1;32m$1\033[0m"
}

function grey ()
{
    printf "\033[1;30m$1\033[0m"
}

function lilac ()
{
    printf "\033[1;35m$1\033[0m"
}

function red ()
{
    printf "\033[0;31m$1\033[0m"
}

function turquoise ()
{
    printf "\033[0;36m$1\033[0m"
}

function turquoise_u ()
{
    printf "\033[4;36m$1\033[0m"
}

# if in hg-directory, print informations about it

function hg_check ()
{
    { [ -d ".hg" ] && echo '.'; } || { [ -d "../.hg" ] && echo '..'; } \
        || { [ -d "../../.hg" ] && echo '../..'; } \
        || { [ -d "../../../.hg" ] && echo '../../..'; }
}

function hg_info ()
{
    hg_root=$(hg_check)
    if [ -n "$hg_root" ]; then
        hg_root=$(realpath $hg_root)
        prompt_dir=$HOME/.prompt$hg_root

        # declare every single variable
        prompt_bookmark=''
        prompt_branch=''
        prompt_patches=''
        prompt_revnum=''
        prompt_st=''
        prompt_tags=''

        [ ! -d $prompt_dir ] && mkdir -p $prompt_dir

        date_root=$(date -r $hg_root +%s)
        date_hg=$(date -r $hg_root/.hg +%s)

        if [ -d $hg_root/.hg/patches ]; then
            date_patch=$(date -r $hg_root/.hg/patches +%s)
        else
            date_patch=0;
        fi

        for file in bookmark branch revnum; do
            [ -f $prompt_dir/$file ] && \
                [ $(date -r $prompt_dir/$file +%s) -ge $date_hg ] && \
                . $prompt_dir/$file
        done

        # for file in patches; do
        file="patches"
        [ -f $prompt_dir/$file ] && \
            date_file=$(date -r $prompt_dir/$file +%s) && \
            [ $date_file -ge $date_patch ] && \
            . $prompt_dir/$file
        # done

        # for file in st; do
        file="st"
        [ -f $prompt_dir/$file ] && \
            date_file=$(date -r $prompt_dir/$file +%s) && \
            [ $date_file -ge $date_hg ] && \
            [ $date_file -ge $(date -r . +%s) ] && \
            . $prompt_dir/$file
        # done

        # for file in tags; do
        file="tags"
        [ -f $prompt_dir/$file ] && \
            date_file=$(date -r $prompt_dir/$file +%s) && \
            [ $date_file -ge $date_hg ] && \
            [ $date_file -ge $date_patch ] && \
            . $prompt_dir/$file
        # done

        if [ -z "$prompt_revnum" ]; then
            printf "prompt_revnum='" >$prompt_dir/revnum
            printf "$(lightblue ':'$(hg id -n 2>/dev/null | sed 's/+$//'))" \
                >>$prompt_dir/revnum
            printf "'" >>$prompt_dir/revnum
            . $prompt_dir/revnum
        fi

        if [ -z "$prompt_st" ]; then
            printf "prompt_st='" >$prompt_dir/st
            hg_st=$(hg st 2>/dev/null | sed 's/?/\\\?/')
            if [ -n "$hg_st" ]; then
                if [ -n "$(echo $hg_st | grep '?')" ]; then
                    printf "$(turquoise '?')" >>$prompt_dir/st
                else
                    printf "$(turquoise '!')" >>$prompt_dir/st
                fi
            else
                printf 'NUL' >>$prompt_dir/st
            fi
            printf "'" >>$prompt_dir/st
            . $prompt_dir/st
        fi
        [ "$prompt_st" == 'NUL' ] && unset prompt_st

        if [ -z "$prompt_branch" ]; then
            printf "prompt_branch='" >$prompt_dir/branch
            printf "on $(red $(hg branch 2>/dev/null))" >>$prompt_dir/branch
            printf "'" >>$prompt_dir/branch
            . $prompt_dir/branch
        fi

        if [ -z "$prompt_tags" ]; then
            printf "prompt_tags='" >$prompt_dir/tags
            hg_tags=$(hg id -t 2>/dev/null)
            for i in $hg_tags; do
                if [ -n "$tags" ]; then
                    tags=$tags", "$(lilac $i)
                else
                    printf 'at ' >>$prompt_dir/tags
                    tags=$(lilac $i)
                fi
            done
            if [ -n "$tags" ]; then
                printf "$tags" >>$prompt_dir/tags
            else
                printf 'NUL' >>$prompt_dir/tags
            fi
            printf "'" >>$prompt_dir/tags
            . $prompt_dir/tags
        fi
        [ "$prompt_tags" == 'NUL' ] && unset prompt_tags

        if [ -z "$prompt_bookmark" ]; then
            hg_bookmarks=$(hg bookmarks 2>/dev/null | grep '*' | \
                sed 's/\s*\*\s*//' | sed 's/\s.*//')
            printf "prompt_bookmark='" >$prompt_dir/bookmark
            if [ -n "$hg_bookmarks" ]; then
                bookmarks="bookmark: "$(red $hg_bookmarks)
            fi
            if [ -n "$bookmarks" ]; then
                printf "$bookmarks" >>$prompt_dir/bookmark
            else
                printf 'NUL' >>$prompt_dir/bookmark
            fi
            printf "'" >>$prompt_dir/bookmark
            . $prompt_dir/bookmark
        fi
        [ "$prompt_bookmark" == 'NUL' ] && unset prompt_bookmark

        if [ -z "$prompt_patches" ]; then
            hg_qtop=$(hg qtop 2>/dev/null)
            printf "prompt_patches='" >$prompt_dir/patches
            if [ -n "$hg_qtop" ]; then
                for i in $(hg qapplied 2>/dev/null); do
                    if [ -n "$patches" ]; then
                        patches=$patches' → '
                    else
                        printf "patches: " >>$prompt_dir/patches
                    fi
                    if [ "$i" == "$hg_qtop" ]; then
                        patches=$patches$(turquoise_u $i)
                    else
                        patches=$patches$(turquoise $i)
                    fi
                done
                for i in $(hg qunapplied 2>/dev/null); do
                    if [ -n "$patches" ]; then
                        patches=$patches' → '$(grey $i)
                    else
                        printf "patches: " >>$prompt_dir/patches
                        patches=$(grey $i)
                    fi
                done
            fi
            if [ -n "$patches" ]; then
                printf "$patches" >>$prompt_dir/patches
            else
                printf 'NUL' >>$prompt_dir/patches
            fi
            printf "'" >>$prompt_dir/patches
            . $prompt_dir/patches
        fi
        [ "$prompt_patches" == 'NUL' ] && unset prompt_patches

        printf "$prompt_revnum$prompt_st $prompt_branch $prompt_tags\n"
        [ "$prompt_bookmark" ] && printf "$prompt_bookmark\n"
        printf "$prompt_patches"
    fi
}

# prompt character

function prompt_char ()
{
    if [ -n "$(hg_check)" ]; then
        printf '☿'
    else
        printf "\$"
    fi
}

PS1='\n'"$(brown '\u')"' at '"$(green '\h')"' in '"$(blue '\w')"
PS1=$PS1'$(hg_info)\n$(prompt_char) '
export PS1
